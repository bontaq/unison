--Abort
ability Abort where
  Abort : forall a . () -> {Abort} a
eff : forall a b . (a -> b) -> b -> Request Abort a -> b
eff f z e = case e of
  { Abort.Abort _ -> k } -> z
  { a } -> f a
-- heff : Nat
heff = handle eff (x -> x Nat.+ 2) 1 with Abort.Abort ()
hudy : Nat
hudy = handle eff (x -> x Nat.+ 2) 1 with 42
bork : () -> {Abort} Nat
bork = u -> 1 Nat.+ (Abort.Abort ())
