--State2 ability

type Optional a = None | Some a

ability State s where
  put : s -> {State s} ()
  get : {State s} s

state : s -> Request (State s) a -> (s, a)
state s eff = case eff of
  { State.get -> k } -> handle (state s) with k s
  { State.put snew -> k } -> handle (state snew) with k ()
  { a } -> (s, a)

modify : (s ->{} s) ->{State s} ()
modify f =
  s = State.get
  s2 = f s
  State.put s2

increment : '{State Nat} ()
increment = '(modify ((+) 1))

second : (a, b) -> b
second p = case p of (_,b) -> b

first : (a, b) -> a
first p = case p of (a,_) -> a

ex : Text
ex =
  result : (Nat, Text)
  result = handle (state 10) with
    State.put (11 + 1)
    x = State.get
    State.put (5 + 5)
    "hello"

  second result

> ex

modify2 : (s -> s) ->{State s} ()
modify2 f =
  s = State.get
  s2 = f s
  State.put s2

---
